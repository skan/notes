Git install
   sudo apt-get install git-core
   sudo apt-get install gitk

First Git config:
   git config --global user.name "Your Name Here"
   git config --global user.email "your_email@youremail.com" 
   git config --global color.ui true

SSH config
   ssh-keygen -t rsa -C "your_email@youremail.com"
   # Creates a new ssh key using the provided email 

   sudo apt-get install xclip
   # Downloads and installs xclip
   xclip -sel clip < ~/.ssh/id_rsa.pub
   # Copies the contents of the id_rsa.pub file to your clipboard for paste in github site

Clone a repository
   git clone git@github.com:skan/my_work.git

Create a new Git projectc:
   git init

Deliver to GitHub
   git remote add origin git@github.com:skan/notes.git
   # Creates a remote named "origin" pointing at your GitHub repo
   git push origin master
   # Sends your commits in the "master" branch to GitHub

Main used commands
   git status
   git log
      git log --stat (résumé plus court)
   git commit file -m "message"

Annuler un commit:
   git reset HEAD^ (pointe a l'avant dernier commit, seul commit est enlevé, les fichiers restent modifiés)
   git reset HEAD~2 (avant avant dernier commit : meme notation que HEAD^^)
Annuler un commit et les changement :
   git reset --hard HEAD^   /!\ Annule les commits et perd tous les changements
Annuler les modifications sur un fichier:
   git checkout nomfichier

working with branch
   git branch branch_name
   git checkout branch_name
   git checkout master
   git merge branch_name
   git -d branch_name

Rechercher dans les fichier source
   git grep "TODO"

Ignore des fichier
   creer .gitignore (a la racine) et y entrer un nom de fichier par ligne
      project.xml
      dossier/temp.txt
      *.tmp
      cache/*

-------------------
Use VI for git diff
   1. add this to .gitconfig
      [diff]
        external = git_diff_wrapper
      [pager]
        diff =
   2. create a file named git_diff_wrapper, put it somewhere in your $PATH
      #!/bin/sh
      vimdiff "$2" "$5"
